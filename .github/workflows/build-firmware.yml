name: Build Firmware
on:
  push:
    paths:
      - 'my-cr10s/marlin-configs/**'
      - '.github/workflows/build-firmware.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLATFORM: STM32G0B1RE_btt
    steps:
      - uses: actions/checkout@v3
      - name: Set Release Name
        id: set-release-name
        run: echo "RELEASE=build${{ github.run_number }}_$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio
      - name: Set Marlin Version
        id: set-marlin-version
        run: echo "MARLIN_VERSION=$(cat my-cr10s/marlin-configs/marlin-version)" >> $GITHUB_OUTPUT
      - name: Checkout Marlin
        uses: actions/checkout@v3
        with:
          repository: MarlinFirmware/Marlin
          ref: ${{ steps.set-marlin-version.outputs.MARLIN_VERSION }}
          path: marlin
      - name: Apply Patch if Present
        if: hashFiles('my-cr10s/marlin-configs/marlin.patch') != ''
        run: cd marlin/ && git apply ../my-cr10s/marlin-configs/marlin.patch
      - name: set custom version
        run: |
          echo '#pragma once' > my-cr10s/marlin-configs/Version.h
          echo '#define DETAILED_BUILD_VERSION "${{ steps.set-release-name.outputs.RELEASE }}"' >> my-cr10s/marlin-configs/Version.h
          echo "#define STRING_DISTRIBUTION_DATE \"$(date +%Y-%m-%d)\"" >> my-cr10s/marlin-configs/Version.h
          echo '#define MACHINE_NAME "jantman-CR10S"' >> my-cr10s/marlin-configs/Version.h
          echo '#define SOURCE_CODE_URL "github.com/jantman/3d-printed-things my-cr10s/marlin-configs"' >> my-cr10s/marlin-configs/Version.h
          cat my-cr10s/marlin-configs/Version.h
      - name: copy-configs
        run: cp -fv my-cr10s/marlin-configs/* marlin/Marlin/
      - name: Build PlatformIO
        run: cd marlin && platformio run -e ${{ env.PLATFORM }}
      - name: ls output
        run: cd marlin && find .pio/build -ls
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.set-release-name.outputs.RELEASE }}
          makeLatest: true
          artifacts: "marlin/.pio/build/**/firmware.bin,marlin/.pio/build/**/config.ini"
          body: ${{ steps.set-release-name.outputs.RELEASE }}
